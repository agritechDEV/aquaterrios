"""changed timer, section and shift

Revision ID: aa08ebdad689
Revises: 64e4c57433b4
Create Date: 2023-09-20 21:11:56.109442

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'aa08ebdad689'
down_revision = '64e4c57433b4'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('pumps', 'available')
    op.add_column('sections', sa.Column('sensors_settings', sa.String(length=25), nullable=True))
    op.add_column('sections', sa.Column('starts_at', sa.Float(), nullable=True))
    op.add_column('sections', sa.Column('stops_at', sa.Float(), nullable=True))
    op.drop_column('sensor_controlers', 'stops_at')
    op.drop_column('sensor_controlers', 'starts_at')
    op.alter_column('sensors', 'set_lvl_1',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('sensors', 'set_lvl_2',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('sensors', 'set_lvl_3',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_column('shifts', 'sensors_settings')
    op.drop_column('shifts', 'mode')
    op.add_column('timer_controlers', sa.Column('Mon', sa.Boolean(), nullable=True))
    op.add_column('timer_controlers', sa.Column('Tue', sa.Boolean(), nullable=True))
    op.add_column('timer_controlers', sa.Column('Wed', sa.Boolean(), nullable=True))
    op.add_column('timer_controlers', sa.Column('Thu', sa.Boolean(), nullable=True))
    op.add_column('timer_controlers', sa.Column('Fri', sa.Boolean(), nullable=True))
    op.add_column('timer_controlers', sa.Column('Sat', sa.Boolean(), nullable=True))
    op.add_column('timer_controlers', sa.Column('Sun', sa.Boolean(), nullable=True))
    op.alter_column('timer_controlers', 'shift_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_foreign_key(None, 'timer_controlers', 'shifts', ['shift_id'], ['id'], ondelete='CASCADE')
    op.drop_column('timer_controlers', 'day')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('timer_controlers', sa.Column('day', sa.VARCHAR(length=25), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'timer_controlers', type_='foreignkey')
    op.alter_column('timer_controlers', 'shift_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('timer_controlers', 'Sun')
    op.drop_column('timer_controlers', 'Sat')
    op.drop_column('timer_controlers', 'Fri')
    op.drop_column('timer_controlers', 'Thu')
    op.drop_column('timer_controlers', 'Wed')
    op.drop_column('timer_controlers', 'Tue')
    op.drop_column('timer_controlers', 'Mon')
    op.add_column('shifts', sa.Column('mode', sa.VARCHAR(length=25), autoincrement=False, nullable=False))
    op.add_column('shifts', sa.Column('sensors_settings', sa.VARCHAR(length=25), autoincrement=False, nullable=True))
    op.alter_column('sensors', 'set_lvl_3',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('sensors', 'set_lvl_2',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('sensors', 'set_lvl_1',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.add_column('sensor_controlers', sa.Column('starts_at', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('sensor_controlers', sa.Column('stops_at', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_column('sections', 'stops_at')
    op.drop_column('sections', 'starts_at')
    op.drop_column('sections', 'sensors_settings')
    op.add_column('pumps', sa.Column('available', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    # ### end Alembic commands ###
